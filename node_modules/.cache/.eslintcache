[{"/Users/tiruo/Code_Repo/sakirty.github.io/src/index.tsx":"1","/Users/tiruo/Code_Repo/sakirty.github.io/src/reportWebVitals.ts":"2","/Users/tiruo/Code_Repo/sakirty.github.io/src/App.tsx":"3","/Users/tiruo/Code_Repo/sakirty.github.io/src/pages/home.tsx":"4","/Users/tiruo/Code_Repo/sakirty.github.io/src/pages/about.tsx":"5","/Users/tiruo/Code_Repo/sakirty.github.io/src/navigation/navi.tsx":"6"},{"size":684,"mtime":1679633825017,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1679630884598,"results":"9","hashOfConfig":"8"},{"size":1377,"mtime":1679698709553,"results":"10","hashOfConfig":"8"},{"size":360,"mtime":1679698747917,"results":"11","hashOfConfig":"8"},{"size":277,"mtime":1679698849740,"results":"12","hashOfConfig":"8"},{"size":3739,"mtime":1679697912165,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"3jvgyn",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/Users/tiruo/Code_Repo/sakirty.github.io/src/index.tsx",[],[],[],"/Users/tiruo/Code_Repo/sakirty.github.io/src/reportWebVitals.ts",[],[],"/Users/tiruo/Code_Repo/sakirty.github.io/src/App.tsx",["36","37","38","39","40","41","42","43","44"],[],"import React from 'react';\nimport './App.css';\n// different pages\nimport Home from './pages/home';\nimport About from './pages/about';\nimport ResponsiveAppBar from './navigation/navi';\n// elements from MUI\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n// React components\nimport { Router, Route, Routes, Link, useNavigate } from 'react-router-dom';\nimport { useState, useCallback, useEffect } from 'react';\n// open in new tab use '_blank' in target, else use '_self'\n// use MUI library\n// https://mui.com/core\nfunction App() {\n  \n\n  /*\n  const [naviSelection, setNaviSelection] = useState<String>('/')\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [open, setOpen] = useState<boolean>(false)\n  const navigate = useNavigate();\n  const handleClick = useCallback(() => {\n    setOpen(true);\n  }, [open]);\n  \n\n  const handleClose = useCallback((page:string) => {\n    setNaviSelection(page);\n    setOpen(false);\n  }, [open]);\n  */\n\n\n\n  return (\n    <div className=\"App\">\n      <ResponsiveAppBar/>\n      <header className=\"App-header\">\n        <Routes>\n          <Route path='/' Component={Home}/>\n          <Route path='/Home' Component={Home}/>\n          <Route path='/about' Component={About}/>\n        </Routes>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/tiruo/Code_Repo/sakirty.github.io/src/pages/home.tsx",["45","46","47","48","49"],[],"import React from 'react';\nimport logo from '../svg/logo.svg';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport jing_shan from '../images/Background/jing_shan.jpg'\n\nfunction Home(){\n\n\n\n    return(\n        <div>\n                \n\n        </div>\n    )\n}\n\nexport default Home;","/Users/tiruo/Code_Repo/sakirty.github.io/src/pages/about.tsx",[],[],"/Users/tiruo/Code_Repo/sakirty.github.io/src/navigation/navi.tsx",["50","51"],[],"import React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\n//import MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\n//import AdbIcon from '@mui/icons-material/Adb';\n\nconst pages = ['Home', 'About'];\n\nfunction ResponsiveAppBar() {\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href=\"/\"\n            sx={{\n              mr: 2,\n              display: { xs: 'none', md: 'flex' },\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n            Welcome\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n            \n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem \n                key={page} \n                onClick={handleCloseNavMenu}\n                href={'/'+page}\n                >\n                  <Typography textAlign=\"center\">{page}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          \n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"a\"\n            href=\"\"\n            sx={{\n              mr: 2,\n              display: { xs: 'flex', md: 'none' },\n              flexGrow: 1,\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            }}\n          >\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page) => (\n              <Button\n                key={page}\n                onClick={handleCloseNavMenu}\n                sx={{ my: 2, color: 'white', display: 'block' }}\n                href={'/'+page}\n              >\n                {page}\n              </Button>\n            ))}\n          </Box>          \n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\nexport default ResponsiveAppBar;",{"ruleId":"52","severity":1,"message":"53","line":8,"column":8,"nodeType":"54","messageId":"55","endLine":8,"endColumn":14},{"ruleId":"52","severity":1,"message":"56","line":9,"column":8,"nodeType":"54","messageId":"55","endLine":9,"endColumn":12},{"ruleId":"52","severity":1,"message":"57","line":10,"column":8,"nodeType":"54","messageId":"55","endLine":10,"endColumn":16},{"ruleId":"52","severity":1,"message":"58","line":12,"column":10,"nodeType":"54","messageId":"55","endLine":12,"endColumn":16},{"ruleId":"52","severity":1,"message":"59","line":12,"column":33,"nodeType":"54","messageId":"55","endLine":12,"endColumn":37},{"ruleId":"52","severity":1,"message":"60","line":12,"column":39,"nodeType":"54","messageId":"55","endLine":12,"endColumn":50},{"ruleId":"52","severity":1,"message":"61","line":13,"column":10,"nodeType":"54","messageId":"55","endLine":13,"endColumn":18},{"ruleId":"52","severity":1,"message":"62","line":13,"column":20,"nodeType":"54","messageId":"55","endLine":13,"endColumn":31},{"ruleId":"52","severity":1,"message":"63","line":13,"column":33,"nodeType":"54","messageId":"55","endLine":13,"endColumn":42},{"ruleId":"52","severity":1,"message":"64","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":12},{"ruleId":"52","severity":1,"message":"53","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":14},{"ruleId":"52","severity":1,"message":"56","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":12},{"ruleId":"52","severity":1,"message":"57","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":16},{"ruleId":"52","severity":1,"message":"65","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":17},{"ruleId":"52","severity":1,"message":"66","line":10,"column":8,"nodeType":"54","messageId":"55","endLine":10,"endColumn":14},{"ruleId":"52","severity":1,"message":"67","line":12,"column":8,"nodeType":"54","messageId":"55","endLine":12,"endColumn":15},"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","'useNavigate' is defined but never used.","'useState' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'logo' is defined but never used.","'jing_shan' is defined but never used.","'Avatar' is defined but never used.","'Tooltip' is defined but never used."]